Text: 
color   --> "#ff0000", "rgb(0,255,0)", "red"
text-align  --> Left, Right, center, Justify
text-decoration --> linkஇல் அடிக்கோட்டை எடுக்க
text-transform  --> uppercase, lowercase, Capitalize
text-indent     --> இடைவெளி அமைக்க உதவும். 
index.html
----------
<html> 
<head> 
<link rel="stylesheet" href="style1.css"> 
</head> 
<body> 
<p class="first"> Dont Giveup! Keep on Trying! </p>
<p class="second">Even though it seems to be impossible, It will happen in your life one day. </p>
<p class="third"> All the very best Friends! Wait to receive the surprises in your life!!!!!!</p>
</body> 
</html> 

style1.css
-----------
p.first 
{color:green; text-decoration:overline; text-transform:uppercase; text-indent:50px;}
p.second 
{color:#0000ff; text-align:right; text-decoration:line-through; text-transform:lowercase;}
p.third
{color:rgb(255,0,0); text-align:center; text-decoration:underline; text-decoration:capitalize;}

rgba(190, 80, 120);
rgba(30%, 60%, 25%);
rgba(72, 122, 180, .7);
rgba(72 122 180 / .2);

The rgba() functional notation expresses a color according to its red, green, and blue components. 
An optional alpha component represents the color's transparency.

-------------
Font: 
font-family - எழுத்துகளின் வகை, பல எழுத்து வகையைக் குறிப்பிடலாம்.  முதல் மதிப்பு இல்லையெனில் இரண்டாவது வகையிலும், இரண்டாவதும் இல்லையெனில் 3ஆவது வகையிலும்
எழுத்துக்களை வெளிப்படுத்தும்.
font-style :    Normal, Italic, Bold, Oblique

font-size: px, em (ephemeral) 
1 em = 16 point typeface
px - pixels: fixed number of pixels, திரையின் அளவு, resolution பற்றிக் கவலை இல்லை.  
em (ephemeral): Relative Unit. 

index.html: 
----------
<html>
<head>
<link rel="stylesheet" href="style.css">
</head>
<body>
<p class="first"> I'm first paragraph உளி விழும் என அழுத கற்கள் சிற்பங்கள் ஆவதில்லை</p>
<p class="second"> I'm second paragraph எங்கே விழுந்தாய் என்று பார்க்காதே!  எங்கே வழுக்கியது என்று பார்!  </p>
<p class="third"> I'm second paragraph தொடக்கத்தில் எல்லாமே கடினம் தான்!  தொடர்ந்து செய்தால் எதுவும் எளிமை தான்!</p>
</body>
</html>

style1.css
-----------

p.first {font-family:"Times New Roman", Times, serif; font-style:Oblique; font-size:30;}
p.second {font-style:italic; font-size:20;}
h1.third {font-style:bold; font-size:30;}

--------------
Link: 
ஒரு linkஐ அழகுபடுத்த color, font-family, font size கொடுக்கலாம்.  

a:link =
a:hover = 
a:active = சொடுக்கும் போது எப்படித் தெரிய வேண்டும்.  
a:visited = சொடுக்கிய பிறகு எப்படித் தெரிய வேண்டும்.  

index.html
------------
<html>
<head> 
<link rel="stylesheet" href="styles/style1.css"> 
</head> 
<body> 
<a href="https://freetamilebooks.com/ebooks/eliya_tamilil_software_testing/" target="_blank"> Click here for Software Testing book </a>
</body> 
</html> 

style1.css
-----------
a:hover {color:red;background-color:yellow;}
a:active {color:white;background-color:black;}


-----------
List: 
Ordered List என்றால் 1,2,3
Unordered List என்றால் புள்ளிகள் 

CSS மூலம் அவற்றை மாற்றலாம்.  
index.html
----------
<html>
<head> 
<link rel="stylesheet" href="style1.css"> 
</head> 
<body> 
Types of Testing
<ol>
<li>Functional Testing</li>
<li>Non-functional Testing</li>
</ol>
Types of non-functional testing
<ul>
<li>Performance Testing</li>
<li>Automation Testing</li>
</ul>
</body> 
</html> 

style.css
---------
ol li {list-style-type:upper-roman;}
ol li {list-style-type:circle;}


list-style-type: circle;
list-style-type: square;
list-style-type: upper-roman;



Visibility  Property: 
தெரிய வேண்டுமா இல்லையா? எனச் சொல்லும்.  
Display: 
inline என இருந்தால், அடுத்தடுத்த வரியில் இல்லாமல் தொடர்ச்சியாக வெளிப்படும்.  
style.css:
----------
ol li {visibility: hidden;}
ol li {display: inline;}

TABLES: 
-------
<html>
<head> 
<link rel="stylesheet" href="styles/style1.css"> 
</head> 
<body> <table>
<tr>
<th>Name</th>
<th>Marks</th>
<th>Rank</th>
</tr>
<tr>
<td>Nanthan</td>
<td>450</td>
<td>Pass</td>
</tr>

<tr>
<th>Venba</th>
<th>445</th>
<th>Pass</th>
</tr>

</table></body> 
</html> 

style1.css
----------

table {width:70%; height: 30%; border: 3px solid red;}
th {border: 2px solid blue;}
td {border: 1px solid red;}
tr:hover {background-color: #ddd;}
tr:nth-child(even){background-color: #f2f2f2;}

இதே CSS கோப்பில்: 
table {width:60%; width:40%; border: 3px solid red; border-collapse: collapse;} 
முயன்று பாருங்கள்.  பிறகு 
border-collapse: separate; பாருங்கள். 
Divisions: 



<html>
<head> 
<link rel="stylesheet" href="styles/style1.css"> 
</head> 
<body> <div>பத்தாவது முறை விழுந்தவனை முத்தமிட்டுச் சொன்னது பூமி - ஒன்பது முறை எழுந்தவன் அல்லவா நீ!  - ஈரோடு தமிழன்பன் </div>
</body> 
</html> 

style1.css
----------
div {width:60%; height: 40%; border: 3px solid red; }

இதே style.css கோப்பில் margin சேர்த்து வேறுபாட்டைக் கவனிக்கவும். 

div {width:60%; height: 40%; border: 3px solid red; margin:25px; } 

padding: உள்ளே இருக்கும் contentக்கும் இடைவெளி கொடுக்கும்.  
style1.css

div {width:60%; height: 40%; border: 3px solid red; margin:25px;padding: 25px; }

Body background: 
index.html: 
<html>
<head> 
<html>
<head> 
<link rel="stylesheet" href="styles/style1.css"> 
</head> 
<body> <div>பத்தாவது முறை விழுந்தவனை முத்தமிட்டுச் சொன்னது பூமி - ஒன்பது முறை எழுந்தவன் அல்லவா நீ!  - ஈரோடு தமிழன்பன் </div>
</body> 
</html> 

style1.css:
body {background-color: skyblue;}

படத்தைச் சேர்ப்பது எப்படி?
body {background-image: url("../linux.jpeg");}

body {
background-image: url("../linux.jpeg");
background-repeat: repeat-x;
}

body {
background-image: url("../linux.jpeg");
background-repeat: no-repeat;
}

body {
background-image: url("../linux.jpeg");
background-repeat: no-repeat;
background-position: right top;
}

POSITIONING: 

position: static: 
The element is positioned according to the normal flow of the document. 
The left, right, top, bottom and z-index properties do not affect an element with position: static.

<html>
<link rel="stylesheet" href="style.css"> 
	<body>
        <div class="parent-element">
            <div class="sibling-element">
                I'm the other sibling element.
            </div>
            
            <div class="main-element">
                All eyes on me. I am the main element.
            </div>
            
            <div class="sibling-element">
                I'm the other sibling element.
            </div>
        </div>
    </body>
<html>


.main-element {
    position: static;
    left: 10px;
    bottom: 10px;
    background-color: yellow;
    padding: 10px;
}

.sibling-element {
    padding: 10px;
    background-color: #f2f2f2;
}

position:relative
-----------------

Replace position:static with position:relative above. 

An offset, based on the values of left, right, top and bottom properties, is applied to the element relative to itself.


.main-element {
    position: static;
    left: 10px;
    bottom: 10px;
    background-color: yellow;
    padding: 10px;
}


position:absolute: 
-----------------
position: absolute are positioned relative to their parent elements. In this case, the element is removed from the normal document 
flow. The other elements will behave as if that element is not in the document. No space is created for the element in the page 
layout.


first: 
-----
.main-element {
  position: absolute;
  left: 0px;
  bottom: 0px;
  background-color: yellow;
  padding: 10px;
}

.parent-element {
  position: static;
  height: 100px;
  padding: 10px;
  background-color: #81adc8;
}

.sibling-element {
background: #f2f2f2;
padding: 10px;
  border: 1px solid #81adc8;
} 

second: 
We will give its parent element a relative position so that it does not get positioned relative to the <html> element.

.main-element {
    position: absolute;
    left: 10px;
    bottom: 10px;
    background-color: yellow;
    padding: 10px;
}

.parent-element {
    position: relative;
    height: 100px;
    padding: 10px;
    background-color: #81adc8;
}

.sibling-element {
	background: #f2f2f2;
	padding: 10px;
    border: 1px solid #81adc8;
} 

Fixed: 
Fixed position elements are similar to absolutely positioned elements. 
They are also removed from the normal flow of the document. 
But unlike absolutely positioned element, they are always positioned 
relative to the <html> element.

One thing to note is that fixed elements are not affected by scrolling. 
They always stay in the same position on the screen.

.main-element {
    position: fixed;
    bottom: 10px;
    left: 10px;
    background-color: yellow;
    padding: 10px;
}

html {
    height: 800px;
}

sticky: 

position: sticky is a mix of position: relative and position: fixed.

position: sticky is a mix of position: relative and position: fixed. It acts like a relatively positioned element until a certain scroll point and then it acts like a fixed element. 

.main-element {
    position: sticky;
    top: 10px;
    background-color: yellow;
    padding: 10px;
}

.parent-element {
    position: relative;
    height: 800px;
    padding: 50px 10px;
    background-color: #81adc8;
}


<!DOCTYPE html>
<html>
<head>
<style>
span {
  color: red;
  border: 1px solid black;
}

.extra span {
  color: inherit;
}
</style>
</head>
<body>

<div>
  Here is <span>a span element</span> which is red, as it is span element
</div>

<div class="extra" style="color:blue">
  Here is <span>a span element</span> which is blue, because it inherits from its parent.
</div>

<div style="color:red">
  Here is <span>a span element</span> which is red, as it is span element
</div>

</body>
</html>

----------
<!DOCTYPE html>
<html>
<head>
<style>
div {
  color: red;
  border: 1px solid blue; 
}

h1 {
  color: initial; 
}
</style>
</head>
<body>

<div>
  <h1 align="center">தலைப்பு</h1>
  <p>தலைப்பின் நிறம் என்ன?  இந்தப் பத்தியின் நிறம் என்ன?  ஏன் இரண்டும் வெவ்வேறு?  initial property தான் காரணம்.  புரிகிறதா?.</p>
</div>
</body>
</html>

------------
revert property: 
.பெற்றோர் {
  color: blue;
}
p {
  color: red;
}
.மாற்று {
  color: revert;
}

<html>
<head>
<link rel="stylesheet" href="styles/style1.css">
</head>
<body>
<div class="பெற்றோர்">
  <p>சி மொழியைக் கண்டுபிடித்தவர் டென்னிஸ் ரிச்சி</p>
  <p class="மாற்று">எழில் மொழியைக் கண்டுபிடித்தவர் முத்து</p>
</div>
</body>
</html>


CSS - Source Order: 

home.html: 
<html>
<head> 
<link rel="stylesheet" href="style1.css"> 
</head>
<body>
<div class="one"> <a target="_blank" href="rabbit.jpeg"><img src="rabbit.jpeg"></a> <div class="two">1</div></div>

<div class="one"> <a target="_blank" href="rabbit.jpeg"><img src="rabbit.jpeg"></a> <div class="two">2</div></div>

<div class="one"> <a target="_blank" href="rabbit.jpeg"><img src="rabbit.jpeg"></a> <div class="two">3</div></div>

<div class="one"> <a target="_blank" href="rabbit.jpeg"><img src="rabbit.jpeg"></a> <div class="two">4</div></div>

</body>

</html>

style1.css: 

div.one {margin:5px; padding:5px; border:1px; solid red; float:left; text-align:center;} 
div.one img { display:inline; margin: 5px; border:1px solid yellow; width:170px; height:150px;}
div.one a:hover img{border:1px solid blue;}
div.two {text-align:center; font-weight:normal; width:120px; margin:5px;}

Opacity: 
<html>
<head> 
<link rel="stylesheet" href="styles/style1.css"> 
</head>
<body>
<div class="one"> <a target="_blank" href="rabbit.jpeg"><img src="rabbit.jpeg"></a> <div class="two">1</div></div>
<div class="one"> <a target="_blank" href="rabbit.jpeg"><img src="rabbit.jpeg"></a> <div class="two">2</div></div>
<div class="one"> <a target="_blank" href="rabbit.jpeg"><img src="rabbit.jpeg"></a> <div class="two">3</div></div>
<div class="one"> <a target="_blank" href="rabbit.jpeg"><img src="rabbit.jpeg"></a> <div class="two">4</div></div>
</body>
</html>

style1.css
-------------

div.one {margin:5px; padding:5px; border:1px; solid red; float:left; text-align:center;} 

div.one img { display:inline; margin: 5px; border:1px solid yellow; width:170px; height:150px; opacity: 0.4; filter:alpha(opacity=40);}

div.one a:hover img{border:1px solid blue;opacity: 1; filter:alpha(opacity=100);}

div.two {text-align:center; font-weight:normal; width:120px; margin:5px;}

